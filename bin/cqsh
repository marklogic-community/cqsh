#! /bin/sh

#   This script is based off of ant. Modified for use with cqsh.
#
#   Copyright 2001-2004 The Apache Software Foundation
#
#   Licensed under the Apache License, Version 2.0 (the "License");
#   you may not use this file except in compliance with the License.
#   You may obtain a copy of the License at
#
#       http://www.apache.org/licenses/LICENSE-2.0
#
#   Unless required by applicable law or agreed to in writing, software
#   distributed under the License is distributed on an "AS IS" BASIS,
#   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#   See the License for the specific language governing permissions and
#   limitations under the License.

if [ -z "$CQSH_HOME" -o ! -d "$CQSH_HOME" ] ; then
  if [ -d /usr/local/cqsh ] ; then
    CQSH_HOME=/usr/local/cqsh
  fi

  ## resolve links - $0 may be a link to cqsh's home
  PRG="$0"
  progname=`basename "$0"`

  # need this for relative symlinks
  while [ -h "$PRG" ] ; do
    ls=`ls -ld "$PRG"`
    link=`expr "$ls" : '.*-> \(.*\)$'`
    if expr "$link" : '/.*' > /dev/null; then
    PRG="$link"
    else
    PRG=`dirname "$PRG"`"/$link"
    fi
  done

  CQSH_HOME=`dirname "$PRG"`/..

  # make it fully qualified
  CQSH_HOME=`cd "$CQSH_HOME" && pwd`
fi

if [ -z "$JAVACMD" ] ; then
  if [ -n "$JAVA_HOME"  ] ; then
    if [ -x "$JAVA_HOME/jre/sh/java" ] ; then
      # IBM's JDK on AIX uses strange locations for the executables
      JAVACMD="$JAVA_HOME/jre/sh/java"
    else
      JAVACMD="$JAVA_HOME/bin/java"
    fi
  else
    JAVACMD=`which java 2> /dev/null `
    if [ -z "$JAVACMD" ] ; then
        JAVACMD=java
    fi
  fi
fi

if [ ! -x "$JAVACMD" ] ; then
  echo "Error: JAVA_HOME is not defined correctly."
  echo "  We cannot execute $JAVACMD"
  exit 1
fi

VMOPTS='-Xms128m -Xmx512m'

if [ "$OSTYPE" = "cygwin" ]; then
    PATHCHAR=';'
    VMOPTS="$VMOPTS -Djline.terminal=jline.UnixTerminal"
else
    PATHCHAR=":"
fi

CQSH_LIB=`echo $CQSH_HOME/lib/*.jar | tr ' ' $PATHCHAR`
CQSH_DIST=`echo $CQSH_HOME/dist/*.jar | tr ' ' $PATHCHAR`
CQSH_CLASSPATH="$CQSH_LIB""$PATHCHAR""$CQSH_DIST"
export LD_LIBRARY_PATH=$CQSH_HOME/lib/

"$JAVACMD" $VMOPTS -classpath "$CQSH_CLASSPATH" com.marklogic.shell.Shell "$@"

